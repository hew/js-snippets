{
  "machine": {
    "description": "state machine",
    "prefix": "__machine",
    "body": [
      "import { Machine, assign } from 'xstate'", 
      "",
      "export interface Context {", 
      " data: any",
      "}",
      " ", 
      "export interface Schema {", 
      " states: {",
      "  $1: {}", 
      "  $2: {}", 
      "  $3: {}",
      "}", 
      " ", 
      "export type CacheEvent = { type: 'EVT'; data: any }",
      "export const CacheMachine = Machine<Context, Schema, Event>(", 
      "{", 
      "  id: 'Cache',",
      "  initial: '$1',", 
      "  context: {", 
      "  data: {},",
      " },",
      "  states: {",
      "    $1: {",
      "      invoke: {",
      "        id: 'service1',",
      "        src: 'service1',",
      "        onDone: {",
      "          target: '$2',",
      "          actions: assign({",
      "            data: (_, __) => {},",
      "          }),",
      "        },",
      "        onError: {",
      "          actions: [(_, evt) => console.error(`Error: ${evt.type}`)],",
      "        },",
      "      },",
      "    },",
      "    $2: {},",
      "    $3: {},",
      "  },",
      "},",
      "{",
      "  services: {",
      "   service1: async (_, __) => {",
      "     console.log('Do stuff')",
      "        return {}",
      "      },",
      "    },",
      "  }",
      ")"
    ]
  }
}

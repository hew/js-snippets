{
  "blockComment": {
    "body": [
      "/*",
      "* $1",
      "*/"
    ],
    "description": "block comment",
    "prefix": "__blockComment"
  },
  "arrowFunc": {
    "body": [
      "const $1 = ({$2}) => $3"
    ],
    "description": "single-line function",
    "prefix": "__func"
  },
  "catch": {
    "body": [
      ".catch(err => console.log(err, \"error\"))"
    ],
    "description": "Promise catch",
    "prefix": "__catch"
  },
  "tryCatch": {
    "body": [
      "try {",
      " $1",
      "}",
      "catch (err) {",
      " $2", 
      "}"
    ],
    "description": "Promise catch",
    "prefix": "__try"
  },
  "component": {
    "body": [
      "export const $1 = ({$2, ...props}) => {",
      "  $4",
      "  return (",
      "   $3",
      " )",
      "}"
    ],
    "description": "React Component",
    "prefix": "__comp"
  },
  "consoleLog": {
    "body": [
      "console.log('$1', $2);"
    ],
    "description": "Log output to console",
    "prefix": "__log"
  },
  "import": {
    "body": [
      "import {$1} from '$2';"
    ],
    "description": "import statement",
    "prefix": "__imp"
  },
  "useEffect": {
    "body": [
      "useEffect(() => {",
      " $1",
      "}, []);"
    ],
    "description": "useState",
    "prefix": "__useEffect"
  },
  "useState": {
    "body": [
      "const [$1, $2] = useState($3);"
    ],
    "description": "useState",
    "prefix": "__useState"
  },
  "useCallback": {
    "body": [
      "const $1 = useCallback(",
      " () => {",
      "   $2(a, b);",
      " },",
      " [a, b],",
      ");"
    ],
    "description": "useCallback",
    "prefix": "__useCallback"
  },
  "flexCenter": {
    "body": [
      "display: 'flex',",
      "justifyContent: 'center',",
      "alignItems: 'center',"
    ],
    "description": "flex center",
    "prefix": "__flexCenter"
  }
}
